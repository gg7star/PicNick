<html>
  <head>
    <style>
      #map {
        height: 725px;
        width: 100%;
      }
  	  .rotate90 {
        -webkit-transform: rotate(90deg);
        -moz-transform: rotate(90deg);
        -o-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
        transform: rotate(90deg);
    	}
    </style>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <link href="css/lightbox.css" rel="stylesheet">
    <title>PicNick Test Database Viewer</title>
  </head>
  <body>
    <h3>PicNick Test Database Viewer</h3>
    <hr />
    <div id="keyDIV"></div>
	<div id="map"></div>
  <div id="images-detail-view"></div>
  <div id="stars-detail-view"></div>
  <div id="comments-detail-view"></div>
  <script src="js/lightbox.js"></script>
  <script src="js/jquery.lightbox_me.js"></script>
	<script src="https://www.gstatic.com/firebasejs/4.1.2/firebase.js"></script>
	<script>
  	// Initialize Firebase
  	var config = {
    	apiKey: "AIzaSyB7qx71V9N8PfDtWkBkzv2DEi_j8GaqQg4",
    	authDomain: "picnick-test-database.firebaseapp.com",
    	databaseURL: "https://picnick-test-database.firebaseio.com",
    	projectId: "picnick-test-database",
    	storageBucket: "picnick-test-database.appspot.com",
    	messagingSenderId: "233513971727"
 		};
  	firebase.initializeApp(config);
	</script>
    <script>
    var gtabledata = null;
    // Create the initial map
    function initMap() {
		var initialloc = {lat: 39.211147, lng: -97.942848};
		var unverifiedicon = 'images/unverifiedtable_1.png'
		var verifiedicon = 'images/verifiedtable_1.png'
  	var map = new google.maps.Map(document.getElementById('map'), {
            		center: initialloc,
            		zoom: 5
          		});
    	// add a single infoWindow outside of the loop that creates the markers
  	var infoWindow = new google.maps.InfoWindow();
		//loop through the database and add a marker to the map for each table location
		//assign the database UID that was created by the push method as the marker ID
    	var ref = firebase.database().ref();
    	ref.on("child_added", function(snapshot) {
        var key = snapshot.key;
				var data = snapshot.val();
				var lat = data.latitude;
				var lng = data.longitude;
				console.log('child added');
				var vfd = String(data.verified);
				if(vfd == "false"){
					tableicon = unverifiedicon;
				} else {
					tableicon = verifiedicon;
				}
				var position = new google.maps.LatLng(lat,lng);
				var marker = new google.maps.Marker({
                        		position: position,
                        		map: map,
                        		id: key,
                        		icon: tableicon
                    		});
				//Add a listener to detect user "clicks" on a marker
				marker.addListener('click', function() {
    			var tableref = firebase.database().ref().child(marker.id)
					console.log('tableref:',tableref);
					console.log('marker ID:', marker.id)
    			tableref.once("value")
    				.then(function(snapshot){
    				  var tabledata = snapshot.val();
              var tablenumimages = snapshot.child("images").numChildren();
  						console.log('tablenumimages:', tablenumimages);
  						var tableimage1link;
  						var tableimagesref = tableref.child("images");
  						console.log('tableimagesref:', tableimagesref);
  						var tableimagewidth;
  						var tableimageheight;
  						var tableimageclass;
  						var tableimagekey;

						  tableimagesref.once("child_added", function(snapshot) {
							  tableimagekey = snapshot.key;
							  tableimage1link = snapshot.val();
							  console.log('tableimagekey:',tableimagekey,'tableimage1link:', tableimage1link);
//							tableimagewidth = tableimagedata.imageWidth;
//							tableimageheight = tableimagedata.imageHeight;
//							if((tableimagewidth/tableimageheight >= 1)||(tableimagewidth === undefined)){
							  tableimageclass = ' class=""';
//							} else
//								tableimageclass = ' class="rotate90"'
//  							console.log(tableimage1link, tableimagewidth, tableimageheight, tableimageclass );
						  });
//        				var tablemultiple = String(tabledata.multiple);
						  var tablenumtables=String(tabledata.numberOfTables);
						  var tablereservation = String(tabledata.reserve);
      				var tableverified = String(tabledata.verified);
      				var tablecovered = String(tabledata.covered);
      				var tablewater = String(tabledata.water);
      				var tablerestrooms = String(tabledata.restroom);
      				var tablewifi = String(tabledata.wifi);
      				var tablehandicap = String(tabledata.handicap);
      				var tablepet = String(tabledata.pet);
      				var tablerv = String(tabledata.rv);
      				var tablevending = String(tabledata.vending);
      				console.log('# of tables:', tablenumtables, 'number of images:', tablenumimages, 'key:',tableimagekey, 'link: ', tableimage1link);
      				if(tableverified == "true"){
      					verified = "**Verified**";
      				} else {
      					verified = "";
      				}
      				//if(tablemultiple == "true"){
      				//	multiple = tablenumtables+"<br>";
      				//} else {
      				//	multiple = "Single Table<br>";
      				//}
      				if(tablecovered == "true"){
      					if(tablenumtables !=1){
      						covered = "Covered Tables<br>";
      					} else {
      						covered = "Covered Table<br>";
						    }
      				} else {
      					covered = "<nobr></nobr>";
      				}
					    console.log(tablecovered, covered);
      				if(tablewater == "true"){
      					water = "Water<br>";
      				} else {
      					water = "<nobr></nobr>";
      				}
      				if(tablerestrooms == "true"){
      					restrooms = "Restrooms<br>";
      				} else {
      					restrooms = "<nobr></nobr>";
      				}
      				if(tablewifi == "true"){
      					wifi = "WiFi<br>";
      				} else {
      					wifi = "<nobr></nobr>";
      				}
      				if(tablehandicap == "true"){
      					handicap = "Handicap Facilities<br>";
      				} else {
      					handicap = "<nobr></nobr>";
      				}
      				if(tablepet == "true"){
      					pet = "Pet Area<br>";
      				} else {
      					pet = "<nobr></nobr>";
      				}
      				if(tablerv == "true"){
      					rv = "RV Area<br>";
      				} else {
      					rv = "<nobr></nobr>";
      				}
      				if(tablevending == "true"){
      					vending = "Vending Machines<br>";
      				} else {
      					vending = "<nobr></nobr>";
      				}
              // Get stars
              gtabledata = tabledata;
              var rating = tabledata.rating;
              var avgstars = rating.avgstars;
              var strAvgstars = Number.parseFloat(avgstars).toFixed(2);
              // Set stars
              var starts = new Array(5);
              for (var i = 0; i < 5; i++) {
                if (i < avgstars) {
                  starts[i] = '<li style="display: inline-block; padding: 0 0px; letter-spacing: 12px;"><a href="#" style="text-decoration: none; font-size: 24px; color: #fb9000eb"><i class="fa fa-star" aria-hidden="true"></i></a></li>'
                } else {
                  starts[i] = '<li style="display: inline-block; padding: 0 0px; letter-spacing: 12px;"><a href="#" style="text-decoration: none; font-size: 24px; color: #fb9000eb"><i class="fa fa-star-o" aria-hidden="true"></i></a></li>'
                }
              }
              // Get comments
              var comments = tabledata.comments
              if (comments === undefined) {
                comments = 0;
              } else {
                comments = Object.keys(comments).length;
              }

    					//create template for infoWindow content
    					var infoWindowcontent =
      					'<div id="content">'+
        					'<table border="0" cellspacing="10" width="330" height="210">'+
      							'<tr>'+
      	  						'<td align="center" height="10" style="color:#090; letter-spacing: 2px;font-family: Arial; font-size: 23px;"><b>' + verified + '</b></td>' +
      	  						'<td width="118" rowspan="2" align="left" valign="middle" height="200" style="font-size: 19px; font-weight: 100;letter-spacing: 1px;"' +
                        'id="ammenities">'+
      								// multiple+
        									tablenumtables+"<br>"+
        									covered+
        									water+
        									restrooms+
        									wifi+
        									handicap+
        									pet+
        									rv+
        									vending+
      							  '</td>'+
      						  '</tr>'+
      							'<tr>'+
      								'<td width="188" align="center">' +
                        addAllImagesTag(tabledata) +
      								'</td>'+
      							'</tr>' +
                    '<tr onclick="starsDetailView()">'+
                      '<td>'+
                        '<ul class="rating" style="display: block; text-align: left; padding: 0; margin: 1px 0 2px; vertical-align: middle; list-style: none">' +
                            starts[0] +
                            starts[1] +
                            starts[2] +
                            starts[3] +
                            starts[4] +
            						'</ul>' +
                      '</td>'+
                      '<td class="td-star-value" style="color: #090; font-size: 19px; text-align: -webkit-left; vertical-align: middle; font-weight: 100; letter-spacing: 1px;">' +
                        strAvgstars + ' stars' +
                      '</td>' +
                    '</tr>'+
                    '<tr onclick="starsDetailView()">' +
                      '<td class="td-star-value" style="color: #090; font-size: 19px; text-align: -webkit-left; vertical-align: middle; font-weight: 100; letter-spacing: 1px;">' +
                        comments + ' comments' +
                      '</td>' +
                    '</tr>' +
      						'</table>'+
    						'</div>';
        			infoWindow.setContent(infoWindowcontent);
          		infoWindow.open(map, marker);
      			});
      		});
        	//Add a listener to close the infoWindow if a user clicks on the map
    			google.maps.event.addListener(map,'click', function(){
    			infoWindow.close();
    		});
		  });
    };

    // $('a:has(img)').lightbox();
    function addAllImagesTag(tabledata) {
      var images = tabledata.images;
      var imageviewhtml = '';

      var imagekeys;
      var numberofimages;
      if (images === undefined) {
        numberofimages = 0;
      } else {
        imagekeys = Object.keys(images);
        numberofimages = imagekeys.length;
      }

      for (var i = 0; i < numberofimages; i++) {
        imageviewhtml += '<a href="' + images[imagekeys[i]] + '" data-lightbox="roadtrip">' +
          '<img id="gm-style-image" style="image-orientation: from-image" width="100%" src="' +
            images[imagekeys[i]] + '"' + (i > 0 ? ' hidden' : '') + '></a>';
      }

      return imageviewhtml;
    }

    function starsDetailView() {
      var rating = gtabledata.rating;
      var avgstars = rating.avgstars;
      var strAvgstars = Number.parseFloat(avgstars).toFixed(2);
      // Set stars
      var starts = new Array(5);
      for (var i = 0; i < 5; i++) {
        if (i < avgstars) {
          starts[i] = '<li style="display: inline-block; padding: 0 0px; letter-spacing: 12px;"><a href="#" style="text-decoration: none; font-size: 24px; color: #fb9000eb"><i class="fa fa-star" aria-hidden="true"></i></a></li>';
        } else {
          starts[i] = '<li style="display: inline-block; padding: 0 0px; letter-spacing: 12px;"><a href="#" style="text-decoration: none; font-size: 24px; color: #fb9000eb"><i class="fa fa-star-o" aria-hidden="true"></i></a></li>';
        }
      }
      // Get comments
      var comments = gtabledata.comments
      var commentkeys;
      if (comments === undefined) {
        numberofcomments = 0;
      } else {
        commentkeys = Object.keys(comments);
        numberofcomments = commentkeys.length;
      }

      console.log("==== comments: ", comments);
      console.log("==== numberofcomments: ", numberofcomments);
      console.log("==== commentkeys: ", commentkeys);
      // Create top. a table of average stars view
      var avgstartsviewhtml = '<div class="avgstars-detail-view-container" style="background: #d1f4cb; padding: 20px 20px 0px 20px;">';
      avgstartsviewhtml +=
          '<table class="table-avgstars-detail-view" border="0" style="background: white; width: 400px; padding: 20px 20px 0px 20px;">' +
            '<tbody>' +
              '<tr>'+
                '<td style="font-size: 22px;">'+
                  "Table Ratings" +
                '</td>'+
              '</tr>'+
              '<tr class="tr-avgstars-detail-view" style="height: 40px;">' +
                '<td class="td-avgstars-detail-view" style="width:50%;">' +
                  '<ul class="rating" style="display: block; text-align: left; padding: 0; margin: 1px 0 2px; vertical-align: middle; list-style: none">' +
                      starts[0] +
                      starts[1] +
                      starts[2] +
                      starts[3] +
                      starts[4] +
                  '</ul>' +
                '</td>'+
                '<td class="td-star-value" style="color: #090; font-size: 19px; text-align: -webkit-left; vertical-align: middle; font-weight: 100; letter-spacing: 1px;">' +
                  strAvgstars + ' stars' +
                '</td>' +
              '</tr>';
        avgstartsviewhtml +=
              '<tr>' +
                '<td style="font-size: 22px;">' +
                  strAvgstars + " out of 5 stars"
                '</td>' +
              '</tr>';
             '</tbody>' +
           '</table>' +
         '</div>'; // avgstars-detail-view-container

         // Create middle. a table of stars detail view
         var startsviewhtml = '<div class="stars-detail-view-container" style="background: #d1f4cb; padding: 0px 20px 20px 20px;">';
         startsviewhtml +=
           '<table class="table-stars-detail-view" border="0" cellpadding="0" cellspacing="0" style="background: white; width: 400px; padding: 0px 20px 20px 20px;">' +
             '<tbody>';
          for (var i = 4; i >= 0; i --) {
            startsviewhtml +=
              '<tr>' +
                '<td width="30%">' +
                  fillStars(i + 1) +
                '</td>' +
                '<td class="td-star-value" style="color: #090; font-size: 19px; text-align: -webkit-left; vertical-align: middle; font-weight: 100; letter-spacing: 1px; padding-left: 13px;">' +
                  (i == (avgstars - 1)  ? '1 ratings - 100%' : '0 ratings - 0%');
                '</td>' +
              '</tr>';
          }

         startsviewhtml +=
              '</tbody>' +
            '</table>' +
          '</div>'; // stars-detail-view-container

      // Create bottom. a table of comments detail view
      var commetsviewhtml = '<div class="comments-detail-view-container" style="background: #d1f4cb;  padding: 0px 20px 20px 20px;">';
      commetsviewhtml +=
          '<table class="table-detail-view" border="0" cellpadding="0" cellspacing="0" style="background: white; width: 400px; padding: 20px;border-collapse: collapse;">' +
            '<tbody>'
      for (var i = 0; i < 5; i ++) {
        commetsviewhtml += '<tr classs="tr-comments-detail-view" style="height: 70px; border-bottom: 1px solid #ececec;">'
        if (i < numberofcomments) {
          var comment = comments[commentkeys[i]]['comment'];
          var commentrating = comments[commentkeys[i]]['rating'];
          commetsviewhtml +=
            '<td classs="td-comments-detail-stars-view" style="width: 30%; vertical-align: top; padding: 16px 0px 10px 20px;">' +
              fillStars(commentrating) +
            '</td>'+
            '<td class="td-comments-detail-comment-view" style="color: #090; font-size: 19px; text-align: -webkit-left; vertical-align: middle; font-weight: 100; letter-spacing: 1px; padding: 10px 20px;">' +
              comment +
            '</td>';
        } else {
          commetsviewhtml += '<td></td><td></td>'
        }
        commetsviewhtml += '</tr>';
      }
      commetsviewhtml +=
            '</tbody>' +
          '</table>' +
        '</div>'; // comments-detail-view-container

      $("#stars-detail-view").append(avgstartsviewhtml).append(startsviewhtml).append(commetsviewhtml);

      $("#stars-detail-view").lightbox_me({
        centered: true,
        preventScroll: true,
        onLoad: function() {
          $("#stars-detail-view").find("input:first").focus();
        },
        onClose: function() {
          $("#stars-detail-view").empty();
        }
      });
    }

    function fillStars(count) {
      var fillstarshtml = '<ul class="rating" style="display: block; text-align: left; padding: 0; margin: 1px 0 2px; vertical-align: middle; list-style: none">';
      for (var i = 0; i < 5; i ++) {
        if (i < count) {
          fillstarshtml += '<li style="display: inline-block; padding: 0 0px; letter-spacing: 6px;"><a href="#" style="text-decoration: none; font-size: 15px; color: #fb9000eb"><i class="fa fa-star" aria-hidden="true"></i></a></li>';
        } else {
          fillstarshtml +=  '<li style="display: inline-block; padding: 0 0px; letter-spacing: 6px;"><a href="#" style="text-decoration: none; font-size: 15px; color: #fb9000eb"><i class="fa fa-star-o" aria-hidden="true"></i></a></li>';
        }
      }
      fillstarshtml += '</ul>'

      return fillstarshtml;
    }

    lightbox.option({
      'resizeDuration': 200,
      'wrapAround': true
    });
  </script>
  <script async defer
	src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7qx71V9N8PfDtWkBkzv2DEi_j8GaqQg4&callback=initMap">
	</script>
  </body>
  </html>
